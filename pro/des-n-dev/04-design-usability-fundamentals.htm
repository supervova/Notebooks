<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Стилистические правила</title>
<link href="/a/css/styles.css" rel="stylesheet" type="text/css" />
</head>

<body>
<h1>Фундаментальные правила юзабилити</h1>
<h2>Оформление заказа в интернет-магазине и другие сложные формы</h2>
<p>Как и сайты в целом, формы должны иметь простой и понятный дизайн, короткие но понятные и недвусмысленные тексты.</p>
<ol>
<li>При открытии любой формы первое поле должно попадать в фокус.</li>
<li>Любые сложные процессы, обычно реализуемые чеерез wizzard-ы, должны быть строго линейными. То есть не дожно быть форм—«веток», заполнив которые, пользователь возвращается к предыдущей форме. Пример неправильно организованного оформления заказа в wall-mart<br />
<img src="/a/img/design-n-development/non-linear-flow-full.png" alt="" /></li>
<li>Нельзя верстать формы в две колонки или объединять на одной странице сразу две формы (например, «вход» и «авторизация»).</li>
<li>Даже очевидные поля формы должны сопровождаться пояснениями: многих ставит в тупик поля вроде Address line 2 или Billing address. Чтобы не захламлять форму, лучше показывать их на фокусе; в тех же областях показывать сообщения об ошибках и подтверждения правильного заполнения — как это сделано в <a href="/Users/vova/Pictures/inspiration/interface/_web/personalizing-registration-01.png">форме регистрации Twitter</a>. Некоторые пояснения (например, к CVC) желательно иллюстрировать.<br /> 
Пояснения критически важны для обязательных полей: зачем пользователь должен оставлять свой номер телефона? («мы свяжемся с вами и договоримся о времени доставки»).
</li>
<li>На ошибки, допущенные при заполнение формы, нужно указывать предельно ясно. Вверху формы крупным шрифтом сообщать о том, сколько ошибок допущено. Неверно заполненные поля выделять так, чтобы это было заметно. Объяснения, в чем именно состоят ошибки, должны появляться рядом с полем. Информация из правильно заполненных полей не должна пропадать. И снова образец для подражания — <a href="/Users/vova/Pictures/inspiration/interface/_web/personalizing-registration-01.png">форма регистрации Twitter</a>. </li>
<li>Вместо слов, допускающих двоякое толкование, следует использовать недвусмысленные определения. Например, в интернет-магазине кнопка Continue может означать продолжение поиска товаров или переход к оформлению товара. Check out now или Shop more вопросов не вызовут.</li>
<li>Для покупки товара не нужна регистрация, однако регистрация нужна для сбора маркетинговой информации о потребителях. Поэтому она должна быть опциональный. Наилучший вариант — предложить зарегистрироваться для ускорения следующих покупок сразу после оформления первого заказа. От покапателя потребуется только придумать пароль. </li>
<li>Нельзя отдельным полям придавать индивидуальные кнопки. Если требуется промежуточный результат заполнения формы, всегда лучше использовать AJAX.<br />
<img src="/a/img/design-n-development/apply-button.gif" alt="" /></li>
<li>Поля форм для ввода конфиденциальной информации должны выделяться: фоном, пиктограммами, графическими сертификатами<br />
<img src="/a/img/design-n-development/visually-secured-checkout-design-full.png" alt="" /></li>
<li>Списки выбора даты окончания действия кредитной карты, должны быть выполнены по формату карты: 03 / 14 — по две цифры с ведущим нулем, через слэш. Месяцам после номера можно добавить текст: например, 03 - March.</li>
<li>Если от пользователя требуется ввести информацию, которую он, возможно, уже ввел (пример: платежный адрес и адрес доставки), следует «прятать» вторую группу полей с помощью механизма флагов «использовать тоже и показывать ее только по желанию пользователя.<br />
<img src="/a/img/design-n-development/shipping-address-3-checkout-process-full.png" alt="" /></li>
</ol>
</body>
</html>